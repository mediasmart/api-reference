openapi: "3.0.0"
info:
  title: Mediasmart
  version: 1.0.0
  description: |
    This is the **API reference** for [mediasmart.io](https://mediasmart.io), directly used by
    [our web application client](https://console.mediasmart.io) but also open to our customers. So using our API
    you'll be able to do most things you can do by mean of the web interface.

    Mediasmart API is private, so first of all you'll need to
    [register an account](http://mediasmart.io/pricing/?utm_source=mediasmart&utm_campaign=api-reference) in case
    you don't have one yet.
  termsOfService: https://mediasmart.io/terms-of-use/
  contact:
    name: Tech Support
    email: support@mediasmart.io
    url: https://mediasmart.io
servers:
  - url: https://api.mediasmart.io
    description: Production server
  - url: http://apitest.mediasmart.io
    description: Staging server (for tests)
security:
  - api_key: []

externalDocs:
  description: Learn more about us
  url: https://mediasmart.io/
tags:
  - name: Public
    description: Public operations. Authentication is not required.
  - name: Dictionaries
    description: Available values in mediasmart platform
  - name: Analytics
    description: Performance and spending reports
  - name: Analytics-Campaign
    description: Performance and spending reports from campaigns.
  - name: Analytics-Availability
    description: Performance and spending reports from availability.
  - name: Analytics-Publishers
    description: Performance and spending reports from publishers info.
  - name: Analytics-Real Time
    description: There is a way to obtain nearly real-time analytics, by mean of our “Daystats” tool.
  - name: Creatives
    description: These routes let you manage your organization’s creatives.
  - name: User
    description: Operations about user
components:
  securitySchemes:
    api_key:
      description: Most of our API endpoints are private. Authentication is performed by mean of a token included in your
        `authorization` header. That token has to be generated by mean of a `[POST] /login` call.
      type: apiKey
      in: header
      name: authorization
  responses:
    400:
      description: Wrong request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Wrong request.
    401:
      description: Not authenticated
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Authentication required. Token not provided.
    403:
      description: Forbidden action
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Invalid or expired token provided.
    429:
      description: Quota exceeded
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Requests per minute quota exceeded.
  parameters:
    Authorization:
      name: authorization
      in: header
      description: Authorization token
      required: true
      schema:
        type: string
  # ANALYTICS PARAMS =====================================================================
    KPI:
      name: kpi
      in: path
      required: true
      description: >-
        KPIs to get. All available kpis are defined in the dictionary, as kpis.
      schema:
        type: string
    CampaignsList:
      name: campaigns
      in: query
      description: >-
          Campaign identifiers to consider (comma separated).
      schema:
        type: string
        example: 'id1,id2,id3'
    From:
      name: from
      in: query
      required: true
      description: >-
        First day to consider
      schema:
        $ref: '#/components/schemas/Date'
    To:
      name: to
      in: query
      required: true
      description: >-
        Last day to consider
      schema:
        $ref: '#/components/schemas/Date'
    Rules:
      name: rules
      in: query
      required: false
      description: >-
        Rules separated by semicolon. Each rule must follow the format
        `{variable}{operator}[{value1},{value2},...]`, where `variable` is any drilldown
        variable, and `operator` is `=` for equality or `!=` for difference. Example
        `countrycode=[FRA,ESP]`.
      schema:
        type: 'string'
        example: 'countrycode=[ESP,FRA];os=[android]'
    DrilldownDaystats:
      name: drilldown
      description: Daystats drilldown variable.
      in: query
      schema:
        type: string
        enum:
          - campaign
          - day
          - exchange
          - k:age
          - p:type
          - p:size
          - p:cat
          - p:conn
          - p:creativename
          - p:creativetype
          - p:deal
          - p:devicetype
          - p:eventid
          - k:gender
          - p:geo
          - p:region
          - p:exacthour
          - p:isp
          - p:language
          - k:operator
          - k:os
          - p:pf
          - p:pub
          - p:refresh
          - p:ab
          - p:idtype
          - k:cat

  # CREATIVES PARAMS =====================================================================
    CreativeState:
      name: state
      in: query
      description: Attribute states of the creatives
      schema:
        type: string
        enum:
          - active
          - archived
          - deleted
          - imported
          - pending-approval
          - rejected
  schemas:
    Session:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          description: Authenticated session
          properties:
            organization:
              $ref: '#/components/schemas/Organization'
            users:
              type: array
              items:
                $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        token:
          description: Authorization token
          type: string
          minLength: 32
          maxLength: 32
          example: padyfwu23fkt6abxf3lfl5ao43sjxden
        username:
          description: User username
          type: string
          minLength: 1
          example: anexampleuser
        name:
          $ref: '#/components/schemas/Name'
        email:
          $ref: '#/components/schemas/Email'
        image:
          $ref: '#/components/schemas/Image'
        role:
          description: User role
          type: string
          minLength: 1
          example: 'editor'
    Identifier:
      description: Unique identifier
      type: string
      minLength: 16
      maxLength: 32
      example: eeeefwu98fkt6abxuytfl5ao43sjx767
    Name:
      description: A name for humans
      type: string
      example: This Is Just a Name
    State:
      description: State in the platform
      type: string
      example: active
    Image:
      description: Image URL
      type: string
      format: url
      example: http://d2wt9ed5gia51z.cloudfront.net/xxxxxxxxxxxxxxxx
    Email:
      description: User email address
      type: string
      format: email
      example: john.smith@example.com
    Organization:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/Name'
        image:
          $ref: '#/components/schemas/Image'
        state:
          $ref: '#/components/schemas/State'
    Date:
      type: string
      format: 'YYYY-MM-DD'
  # DICTIONARY SCHEMAS ===================================================================
    Dictionary:
      type: object
      example:
        countries:
          ESP: Spain
          FRA: France
          PRT: Portugal
          ...: ...
        drilldown:
          campaign: Campaign
          exchange: Ad Exchange
          os: Operating system
          ...: ...
        kpis:
          offers: Bid offers
          bids: Bids
          impressions: Impressions
          clicks: Clicks
          ...: ...
        ...: ...
    Countries:
      type: object
      example:
        ESP: Spain
        FRA: France
        PRT: Portugal
        ...: ...
    CountriesList:
      type: string
      description: >-
        Country codes list (comma separated). Available values may depend on your account,
        so check `countries` dictionary to retrieve the full list.
      format: code1,code2,code3
      enum:
        - AFG
        - ALB
        - DZA
        - ASM
        - AND
        - AGO
        - AIA
        - ATA
        - ATG
        - ARG
        - ARM
        - ABW
        - AUS
        - AUT
        - AZE
        - BHS
        - BHR
        - BGD
        - BRB
        - BLR
        - BEL
        - BLZ
        - BEN
        - BMU
        - BTN
        - BOL
        - BIH
        - BWA
        - BVT
        - BRA
        - IOT
        - BRN
        - BGR
        - BFA
        - BDI
        - KHM
        - ...
    Regions:
      type: object
      example:
        ESP:GA: Galicia
        ESP:CM: Castille-La Mancha
        FRA:F: Centre
        FRA:P: Lower Normandy
        ...: ...
    RegionsList:
      type: string
      description: >-
        Region codes list (comma separated). Available values may depend on
        your account, so check `regions` dictionary to retrieve the full list.
      format: code1,code2,code3
      enum:
        - FRA:F
        - FRA:P
        - ESP:GA
        - ESP:CM
        - ESP:AS
        - ESP:MD
        - ESP:RI
        - ESP:CE
    Cities:
      type: object
      example:
        3121424: Gijón
        3110962: Sama
        3129135: Avilés
        3116789: Mieres
        3114711: Oviedo
        ...: ...
    Mosaic:
      type: object
      example:
        esp:a:01: "Spain A01 :: Elites > Classic Elites"
        esp:a:02: "Spain A02 :: Elites > Urban Elites"
        esp:a:03: "Spain A03 :: Elites > Residential Elites"
    Audiences:
      type: object
      example:
        "audience1": 0
        "audience2": 42
        "other_audience_code": 333
        ...: ...
  # ANALYTICS SCHEMAS ====================================================================
    AnalyticsSummary:
      type: object
      example:
        "id1":
          "2015-10-09" : "0.07"
          "2015-10-10" : "0.07"
        "id2":
          "2015-10-09" : "0.10"
          "2015-10-10" : "0.08"
    AnalyticsLimits:
      type: object
      example:
            "expected":
              "2015-10-09": "46333.33"
              "2015-10-13": "30250.00"
            "observed":
                "2015-10-10" : "30060.00"
                "2015-10-12" : "32844.00"
            "global":
                "time": 30
                "delivery": 25
  # CREATIVE SCHEMAS =====================================================================
    Creative:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - image
            - video
            - audio
            - external_video
            - native
            - dynamic
            - tag
    CreativeVideo:
      allOf:
        - $ref: '#/components/schemas/Creative'
        - type: object
          required:
            - file
          properties:
            companion:
              $ref: '#/components/schemas/CreativeCompanion'
            file:
              type: string
              format: binary
              description: >-
                An attached video file (multipart). Some SSPs support landscape and portrait
                videos, so you can upload two video files with complementary aspect ratios.
    CreativeCompanion:
      type: object
      properties:
        url:
          type: string
          description: The click URL for an optional companion/endcard ad. Required if there is a companion.
        width:
          type: string
          description: Width of the companion ad. Required if there is a companion.
        height:
          type: string
          description: Height of the a companion ad. Required if there is a companion
        banner:
          type: string
          description: URL where the companion image is located, in case this is an static image companion.
        html:
          type: string
          description: HTML code of the richmedia companion. Either a banner or an html code must be submited in companions.
    CreativeNative:
      allOf:
        - $ref: '#/components/schemas/Creative'
        - type: object
          properties:
            native_settings:
              $ref: '#/components/schemas/CreativeNativeSettings'
    CreativeNativeSettings:
      type: object
      required:
        - title
        - text
        - action
        - icon300x300
      properties:
        title:
          type: string
          example: 'Hello World'
          description: 'Ad title'
        text:
          type: string
          example: 'I am a text'
          description: 'Ad text'
        action:
          type: string
          example: 'Sign up'
          description: 'Action text'
        rating:
          type: number
          example: 3
          description: 'The app store rating 0-5'
        icon300x300:
          type: string
          format: binary
        image1200x627:
          type: string
          format: binary
          description: An attached image file for 1200x627
        image580x480:
          type: string
          format: binary
          description: An attached image file for 580x480
        image640x480:
          type: string
          format: binary
          description: An attached image file for 640x480
        image356x200:
          type: string
          format: binary
          description: An attached image file for 356x200
        image240x200:
          type: string
          format: binary
          description: An attached image file for 240x200
        image180x60:
          type: string
          format: binary
          description: An attached image file for 180x60
        image138x115:
          type: string
          format: binary
          description: An attached image file for 138x115
        image90x75:
          type: string
          format: binary
          description: An attached image file for 90x75
        image72x60:
          type: string
          format: binary
          description: An attached image file for 72x60
        file:
          type: string
          format: binary
          description: An attached video file
    CreativeAudio:
      allOf:
        - $ref: '#/components/schemas/Creative'
        - type: object
          required:
            - file
          properties:
            file:
              type: string
              format: binary
              description: An attached audio file (multipart).
            companion:
              $ref: '#/components/schemas/CreativeCompanion'
    CreativeTags:
      allOf:
        - $ref: '#/components/schemas/Creative'
        - type: object
          required:
            - html
            - is_mraid
            - is_secure
            - thumbnail_url
          properties:
            html:
              type: string
              description: HTML markup, maybe including JS scripts, images, etc.
            is_mraid:
              type: boolean
              description: Should be marked if mraid library is used.
            is_secure:
              type: boolean
              description: The tag only uses HTTPS and follows Apple iOS 9 guidelines. See https://goo.gl/UglmM8
            is_responsive:
              type: boolean
              description: The code of the tag is responsive and adapt automatically to the sizes defined in the field responsive_sizes.
            responsive_sizes:
              type: array
              items:
                type: string
                enum:
                  - "120x600"
                  - "160x600"
                  - "300x100"
                  - "300x250"
                  - "300x50"
                  - "300x600"
                  - "320x100"
                  - "320x180"
                  - "320x240"
                  - "320x320"
                  - "320x480"
                  - "320x50"
                  - "336x280"
                  - "360x203"
                  - "360x640"
                  - "480x320"
                  - "480x854"
                  - "640x1136"
                  - "640x360"
                  - "640x480"
                  - "640x960"
              description: The sizes that this tag allows in case it is responsive. This field is mandatory if is_responsive=true. The available sizes can be consulted in the dictionary.
            thumbnail_url:
              type: string
              format: file
              description: Image file to be used as thumbnail.
    CreativeImage:
      allOf:
        - $ref: '#/components/schemas/Creative'
        - type: object
          required:
            - file
          properties:
            file:
              type: string
              format: binary
              description: One or more attached image files (multipart). A new creative will be created for each file.
    CreativeExternalVideo:
      allOf:
        - $ref: '#/components/schemas/Creative'
        - type: object
          required:
            - vast_wrapper
          properties:
            vast_wrapper:
              type: object
              required:
                - url
                - duration
              properties:
                url:
                  type: string
                  description: A valid VAST location URL
                duration:
                  type: number
                  description: The duration of the referenced video
                xml:
                  type: string
                  description: XML VAST Tag of the external video. If this is sent, the url attribute is ignored.
    CreativeDynamic:
      allOf:
        - $ref: '#/components/schemas/Creative'
        - type: object
          required:
            - dynamic_settings
          properties:
            vast_wrapper:
              type: object
              required:
                - top
                - bottom
                - left
                - right
              properties:
                top:
                  type: number
                  description: Top margin for the text box (in px).
                bottom:
                  type: number
                  description: Bottom margin for the text box (in px).
                left:
                  type: number
                  description: Left margin for the text box (in px).
                right:
                  type: number
                  description: right margin for the text box (in px).
                font_size:
                  type: number
                  description: Font size for the text (in px).
                color:
                  type: string
                  description: Hexadecimal color for the text.
    Audience:
      type: object
      properties:
        id:
          type: string
          description: audience identifier.
        name:
          type: string
          description: audience name.
        description:
          type: string
          description: audience description.
        beacon:
          type: string
          description: audience beacon URL.
        created_at:
          type: string
          description: audience creation date.
        items:
          type: number
          description: number of items in the audience.
paths:
# PUBLIC PATHS ===========================================================================
  /status:
    get:
      operationId: status
      tags:
        - Public
      summary: status
      description: >-
        This endpoint is useful to check servers status. If a success
        response is returned it means our API is up. Additional
        information related to servers or services status may be
        included in the response.
      responses:
        200:
          description: The API is up
          content:
            application/json:
              examples:
                a:
                  value:
                    version: 1.4.14
                    status: All servers are OK
  /login:
    post:
      tags:
        - Public
      summary: login
      description: >-
        Performs a login to retrieve a session including an authorization token.
        That token can be used as `authorization` header for later requests.
      requestBody:
          description: User credentials
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    description: Username or email
                    type: string
                    minLength: 1
                    example: thisismyusername
                  password:
                    description: Password
                    type: string
                    minLength: 1
                    example: thisismypassword
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'

# DICTIONARY PATHS =======================================================================
  /api/dictionary:
    get:
      tags:
        - Dictionaries
      summary: dictionary
      description: >-
        Retrieves the main dictionary, including all values for
        everything in our platform. From available campaign states to
        existing user roles.
      parameters:
        - $ref: '#/components/parameters/Authorization'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dictionary'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/dictionary/countries:
    get:
      tags:
        - Dictionaries
      summary: countries
      description: >-
        Retrieves all available countries for reporting or campaigns
        configuration
      parameters:
        - $ref: '#/components/parameters/Authorization'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Countries'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/dictionary/regions:
    get:
      tags:
        - Dictionaries
      summary: regions
      description: >-
        Retrieves all available regions from specified countries list
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: countries
          in: query
          schema:
            $ref: '#/components/schemas/CountriesList'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regions'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/dictionary/cities:
    get:
      tags:
        - Dictionaries
      summary: cities
      description: >-
        Retrieves all available cities from specified
        countries or regions list
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: countries
          in: query
          schema:
            $ref: '#/components/schemas/CountriesList'
        - name: regions
          in: query
          schema:
            $ref: '#/components/schemas/RegionsList'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cities'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/dictionary/mosaic:
    get:
      tags:
        - Dictionaries
      summary: mosaic
      description: >-
        Retrieves all available mosaic profiles from specified countries.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: countries
          in: query
          schema:
            $ref: '#/components/schemas/CountriesList'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mosaic'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/dictionary/audiences:
    get:
      tags:
        - Dictionaries
      summary: audiences
      description: >-
        Retrieves all available audiences in your account DMP. The result is a map where the key is the audience code
        and the value is the number of devices its audience has loaded today. Your account DMP is based on the
        organization bound to the authorization credentials. Audiences that were loaded in the past but are now empty
        will list zero elements.
      parameters:
        - $ref: '#/components/parameters/Authorization'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audiences'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'

# ANALYTICS PATHS ========================================================================
  /api/analytics/summary/{kpi}:
    get:
      tags:
        - Analytics
      summary: summary
      description: >-
        Retrieves a general view of the evolution of user’s campaigns,
        during the last week, based on a provided KPI
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/CampaignsList'
        - name: kpi
          in: path
          required: true
          schema:
            type: 'string'
            enum:
              - wonprice
              - cpm
              - cpc
              - cpa1
              - cpa2
              - cpa3
              - cpa4
              - cpa5
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsSummary'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/analytics/summary/limits/{kpi}:
    get:
      tags:
        - Analytics
      summary: summary
      description: >-
        Returns recent limits status for your campaigns.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/CampaignsList'
        - name: kpi
          in: path
          required: true
          schema:
            type: 'string'
            enum:
              - wonprice
              - impressions
              - clicks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsLimits'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/analytics/summary/goals/{kpi}:
    get:
      tags:
        - Analytics
      summary: summary
      description: >-
        Retrieves a summary about pricing goals, both expected and observed values
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/CampaignsList'
        - name: kpi
          in: path
          required: true
          schema:
            type: 'string'
            enum:
              - cpm
              - cpc
              - cpa1
              - cpa2
              - cpa3
              - cpa4
              - cpa5
      responses:
        '200':
          description: A drilldown map for each requested KPI
          content:
            application/json:
              schema:
                type: object
                example:
                     "observed":
                      "2015-10-13" : "13.08"
                      "2015-10-14" : "7.70"
                     "expected" :
                      "2015-10-09" : "1.21"
                      "2015-10-10" : "3.35"
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/analytics/drilldown/{variable}:
    get:
      tags:
        - Analytics
      summary: summary
      description: >-
        Compute the drilldown of a single variable, where {variable} must be any available drilldown variable.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - name: variable
          in: path
          required: true
          description: >-
            Must be any available drilldown variable. All drilldown variables are defined
            in the dictionary, as drilldown.
          schema:
            type: string
        - name: kpis
          in: query
          required: true
          description: >-
            KPIs to get. All available kpis are defined in the dictionary, as kpis.
          schema:
            type: string
            example: 'cpm, cpc'
        - name: limit
          in: query
          required: false
          description: >-
            Max number of results (25 by default)
          schema:
            type: number
        - name: format
          in: query
          required: false
          description: >-
            File format (excel, csv).
          schema:
            type: number
        - $ref: '#/components/parameters/Rules'
        - name: raw
          in: query
          required: false
          description: >-
            Retrieve raw data. Don’t round numbers.
          schema:
            type: 'boolean'
            example: 'countrycode=[ESP,FRA];os=[android]'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  "cpm" :
                    "2016-01-01" : "0.78"
                    "2016-01-02" : "0.79"
                    "2016-01-03" : "0.74"
                  "impressions" :
                    "2016-01-01" : "7604605"
                    "2016-01-02" : "7037341"
                    "2016-01-03" : "7381303"
                  "clicks" :
                    "2016-01-01" : "101103"
                    "2016-01-02" : "99406"
                    "2016-01-03" : "94051"
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/analytics/custom-report:
    get:
      tags:
        - Analytics
      summary: summary
      description: >-
        Download a full report, drilling down for some criteria and limited to a provided time range.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: variable
          in: path
          required: true
          description: >-
            All drilldown variables are defined in the dictionary, as drilldown
          schema:
            type: 'string'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - name: kpis
          in: query
          required: true
          description: >-
            KPIs to get. All available kpis are defined in the dictionary, as kpis.
          schema:
            type: string
            example: 'cpm, cpc'
        - name: limit
          in: query
          required: false
          description: >-
            Max number of results (25 by default)
          schema:
            type: number
        - $ref: '#/components/parameters/Rules'
        - name: raw
          in: query
          required: false
          description: >-
            Retrieve raw data. Don’t round numbers.
          schema:
            type: 'boolean'

      responses:
        '200':
          description: A report file, CSV by default
          content:
            text/csv:
              schema:
                type: string
                example: >-
                  "2015-10-13","smartad","android","968492","6770"
                  "2015-10-13","mopub","android","900804","13656"
                  "2015-10-14","smartad","android","960925","20872"
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/analytics/kpi/{kpi}:
    get:
      tags:
        - Analytics
      summary: summary
      description: >-
        Retrieves the evolution of a KPI during the last week, where :kpi is one of the available KPIs, defined in the dictionary, as kpis.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/CampaignsList'
        - $ref: '#/components/parameters/KPI'
      responses:
        '200':
          description: Timeline
          content:
            application/json:
              schema:
                type: string
                format: byte
                example: >-
                  "clicks" :
                  "2016-01-07" : 1115
                  "2016-01-06" : 1180
                  "2016-01-13" : 316
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'

# CAMPAIGN ANALYTICS PATHS ===============================================================
  /api/campaign/{id}/analytics/summary:
    get:
      tags:
        - Analytics-Campaign
      summary: campaign > summary
      description: Retrieves a simple summary of how a campaign is performing today, compared with the previous day.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: id
          in: path
          description: Campaign identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                example:
                  impressions:
                    today: 40223
                    yesterday: 50123
                  clicks:
                    today: 321
                    yesterday: 302
                  ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/campaign/{id}/analytics/kpi/{kpi}:
    get:
      tags:
        - Analytics-Campaign
      summary: campaign > kpi/{kpi}
      description: Retrieves the evolution of a KPI during the last week, for a single campaign
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: id
          in: path
          description: Campaign identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/KPI'
        - name: campaigns
          in: query
          schema:
            type: string
          description: Campaign identifiers (comma separated)
      responses:
        '200':
            description: Timeline
            content:
              application/json:
                schema:
                  type: object
                  example:
                    impressions:
                      '2018-05-03': 3234
                      '2018-05-04': 3223
                      '2018-05-05': 3001
                      ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/campaign/{id}/analytics/drilldown/{variable}:
    get:
      tags:
        - Analytics-Campaign
      summary: campaign > drilldown/{variable}
      description: Compute the drilldown of a single variable
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: id
          in: path
          description: Campaign identifier
          required: true
          schema:
            type: string
        - name: variable
          in: path
          required: true
          schema:
            type: string
            description: >-
              Drilldown variable. Available values may depend on your account, so check
              `drilldown` key in the dictionary to retrieve the full list.
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - name: kpis
          in: query
          description: >-
            Key Performance Indicators (comma separated). Available values may depend on your account, so check
            `kpis` key in the dictionary to retrieve the full list.
          schema:
            type: string
            format: one,other,another
        - name: raw
          in: query
          description: Active to avoid numbers rounding
          schema:
            type: boolean
        - $ref: '#/components/parameters/Rules'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  cpm:
                    FRA: 13
                    ESP: 4
                    PRT: 29
                    ...: ...
                  impressions:
                    FRA: 1233
                    ESP: 12304
                    PRT: 2349
                    ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/campaign/{id}/analytics/report:
    get:
      tags:
        - Analytics-Campaign
      summary: campaign > custom-report
      description: Computes a customized report, specifying drilldown variables, kpis and dates range.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: id
          in: path
          description: Campaign identifier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - name: kpis
          in: query
          required: true
          description: >-
            KPIs to get. All available kpis are defined in the dictionary, as kpis.
          schema:
            type: string
            example: 'cpm, cpc'
        - name: limit
          in: query
          required: false
          description: >-
            Max number of results (25 by default)
          schema:
            type: number
        - $ref: '#/components/parameters/Rules'
        - name: raw
          in: query
          required: false
          description: >-
            Retrieve raw data. Don’t round numbers.
          schema:
            type: 'boolean'
      responses:
        '200':
          description: A report file, CSV by default
          content:
            text/csv:
              schema:
                type: string
                example: >-
                  "2015-10-13","smartad","android","968492","6770"
                  "2015-10-13","mopub","android","900804","13656"
                  "2015-10-14","smartad","android","960925","20872"
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'

# AVAILABILITY ANALYTICS PATHS ===========================================================

  /api/analytics/availability/drilldown/{variable}:
    get:
      tags:
        - Analytics-Availability
      summary: availability > drilldown/{variable}
      description: Retrieves an estimation of the available bidoffers for all possible values of a variable, where :variable the variable.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: variable
          in: path
          required: true
          schema:
            type: string
            description: Availability drilldown variable.
            enum:
              - day
              - exchange
              - connectiontype
              - carrier
              - idtype
              - countrycode
              - userlanguage
              - devicetype
              - os
              - osversion
              - size
              - agegroup
              - gender
              - dnt
              - pricefloor
              - source
              - iabcategory
              - iabsubcategory
              - locationtype
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - $ref: '#/components/parameters/Rules'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  android: 13232411
                  iphone: 442212
                  ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/analytics/availability/summary:
    get:
      tags:
        - Analytics-Availability
      summary: availability > summary
      description: Retrieves an estimation of the amount of available bidoffers according with provided filters. This includes a total count and a timeline.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - $ref: '#/components/parameters/Rules'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  count: 11642975
                  timeline:
                    13:00: 454401
                    14:00: 704531
                    15:00: 704531
                    ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'

# PUBLISHERS ANALYTICS PATHS =============================================================
  /api/analytics/publishers/drilldown/{variable}:
    get:
      tags:
        - Analytics-Publishers
      summary: publishers > drilldown/{variable}
      description: Computes the drilldown of a variable, according with some fixed filters, where :variable is the variable.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - name: variable
          in: path
          required: true
          schema:
            type: string
            description: Availability publishers drilldown variable.
            enum:
              - countrycode
              - size
              - url
              - adtype
              - exchange
              - publisher
              - iabcategory
              - iabsubcategory
              - day
              - pricefloor
              - appsite
              - publishertype
              - keyword
              - os
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - $ref: '#/components/parameters/Rules'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  blackberry: 34332
                  android: 7468823
                  ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/analytics/publishers:
    get:
      tags:
        - Analytics-Publishers
      summary: publishers > summary
      description: Retrieves a list of available publishers, according with some optional filters
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - $ref: '#/components/parameters/Rules'
        - name: limit
          description: The ammount of items to retrieve
          in: query
          schema:
            type: number
        - name: offset
          description: An offset for the list
          in: query
          schema:
            type: number
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  - appsite: mobile.dailymotion.com
                    url: ''
                    keyword: mobiledailymotioncom
                    publisher: ''
                    offercount: 1923064
                  - offercount: 1909000
                    keyword: leading_global_video_publisher_
                    publishertype: site
                    site: Leading Global Video Publisher
                    appsite: Leading Global Video Publisher - MW
                    url: dailymotion.com
                  - ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'

# ANALYTICS REAL TIME PATHS ==============================================================
  /api/analytics/daystats:
    get:
      tags:
        - Analytics-Real Time
      summary: real time > summary
      description: Computes a drilldown to extract all KPIs for possible values of a certain variable
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - $ref: '#/components/parameters/DrilldownDaystats'
        - name: campaign
          description: Fix a campaign
          in: query
          schema:
            type: string
        - name: exchange
          description: Fix and AdExchange
          in: query
          schema:
            type: string
        - name: keyword
          description: Fix a value for a keyword prefix
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  - drillby: Campaign Name X
                    won: 786
                    impressions: 759
                    clicks: 34
                  - ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'
  /api/analytics/daystats-report:
    get:
      tags:
        - Analytics-Real Time
      summary: real time > report
      description: Downloads a drilldown report in CSV format. Check previous section for more details.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - $ref: '#/components/parameters/DrilldownDaystats'
        - name: campaign
          description: Fix a campaign
          in: query
          schema:
            type: string
        - name: exchange
          description: Fix and AdExchange
          in: query
          schema:
            type: string
        - name: keyword
          description: Fix a value for a keyword prefix
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/csv:
              schema:
                type: object
                example:
                  - value: Campaign Name string A
                    won: 1234
                    impressions: 323
                    clicks: 45
                  - value: Campaign Name string B
                    won: 9234
                    impressions: 923
                    clicks: 69
                  - value: Campaign Name string C
                    won: 7634
                    impressions: 523
                    clicks: 85
                  - ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '429':
          $ref: '#/components/responses/429'

# CREATIVES PATHS ========================================================================
  /api/creatives:
    get:
      tags:
        - Creatives
      summary: /creatives
      description: Retrieves all available creatives summary.
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/CreativeState'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  - id: <identifier>
                    type: <creative_type>
                    state: pending-approval
                    name: <creative_name>
                    width: <width_in_pixels>
                    height: <height_in_pixels>
                    thumbnail_url: <image_url>
                    tags:
                      - label1
                      - label2
                      - ...
                    created_at: <iso_date>
                    updated_at: <iso_date>
                  - ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /api/creative:
    post:
      tags:
        - Creatives
      summary: /creative
      description: Adds a new creative to your organization
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        description: Creative attributes and assets
        required: true
        content:
          multipart/form-data:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreativeNative'
                - $ref: '#/components/schemas/CreativeVideo'
                - $ref: '#/components/schemas/CreativeAudio'
                - $ref: '#/components/schemas/CreativeImage'
                - $ref: '#/components/schemas/CreativeExternalVideo'
                - $ref: '#/components/schemas/CreativeTags'
                - $ref: '#/components/schemas/CreativeDynamic'

      responses:
        '200':
          description: Successful creation
          content:
            application/json:
              schema:
                 oneOf:
                  - $ref: '#/components/schemas/CreativeNative'
                  - $ref: '#/components/schemas/CreativeVideo'
                  - $ref: '#/components/schemas/CreativeAudio'
                  - $ref: '#/components/schemas/CreativeImage'
                  - $ref: '#/components/schemas/CreativeExternalVideo'
                  - $ref: '#/components/schemas/CreativeTags'
                  - $ref: '#/components/schemas/CreativeDynamic'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
  /api/creative/{id}:
    get:
      tags:
        - Creatives
      summary: creative/:id
      description: Retrieves a single creative, where :id is a creative identifier.
      parameters:
        - $ref: '#/components/parameters/Authorization'

        - name: id
          in: path
          description: Id of the creative
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  - id: <identifier>
                    name: <the_name>
                    description: <description>
                    ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
    delete:
      tags:
        - Creatives
      summary: creative/:id
      description: Retrieves a single creative, where :id is a creative identifier.
      parameters:
        - $ref: '#/components/parameters/Authorization'

        - name: id
          in: path
          description: Id of the creative
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  - id: <identifier>
                    name: <the_name>
                    description: <description>
                    ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
    put:
      tags:
        - Creatives
      summary: creative/:id
      description: Perform updates over an existing creative. Where :id is the creative identifier.
      parameters:
        - $ref: '#/components/parameters/Authorization'

        - name: id
          in: path
          description: Id of the creative
          required: true
          schema:
            type: string
      requestBody:
        description: Creative attributes and assets
        required: true
        content:
          multipart/form-data:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreativeNative'
                - $ref: '#/components/schemas/CreativeVideo'
                - $ref: '#/components/schemas/CreativeAudio'
                - $ref: '#/components/schemas/CreativeImage'
                - $ref: '#/components/schemas/CreativeExternalVideo'
                - $ref: '#/components/schemas/CreativeTags'
                - $ref: '#/components/schemas/CreativeDynamic'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  - id: <identifier>
                    name: <the_name>
                    description: <description>
                    ...: ...
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
# CAMPAIGNS PATHS ========================================================================

# STRATEGIES PATHS =======================================================================

# AUDIENCES PATHS ========================================================================
  /api/audiences:
    get:
      tags:
        - Audiences
      summary: /audiences
      description: Retrieves all available audiences summary.
      parameters:
        - $ref: '#/components/parameters/Authorization'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AudienceListItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /api/audience:
    post:
      tags:
        - Audience
      summary: /audience
      description: Adds a new creative to your organization
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        description: Creative attributes and assets
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - description
                - file
              properties:
                name:
                  type: string
                  description: A name for your audience
                description:
                  type: string
                  description: A description for your audience
                file:
                  type: string
                  format: binary
                  description: A name for your audience
                cpm:
                  type: number
                  description: Cost per Mille impressions[DATA PARTNERS ONLY].
                countries:
                  type: array
                  description: Countries of the audience (provide it more than one time to support many countries)[DATA PARTNERS ONLY].
                  items:
                    type: string
                allowed_organizations:
                  type: array
                  description: Organization ID allowed to use the audience (provide it more than one time to support many organizations)[DATA PARTNERS ONLY].
                  items:
                    type: string


      responses:
        '200':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audience'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'